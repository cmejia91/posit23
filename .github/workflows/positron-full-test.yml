name: "Positron: Full Test Suite"

# Run tests daily at 4am UTC (11p EST) on weekdays for now, or manually
on:
  schedule:
    - cron: "0 4 * * 1-5"
  workflow_dispatch:

jobs:

  linux:
    name: Tests on Linux
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y vim curl build-essential clang make cmake git python3-pip python-is-python3 libsodium-dev libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0 libgbm1 libnss3 libnspr4 libasound2 libkrb5-dev
          sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start

      - name: Install rig, R, and R packages
        run: |
          curl -Ls https://github.com/r-lib/rig/releases/download/latest/rig-linux-"$(arch)"-latest.tar.gz | $(which sudo) tar xz -C /usr/local
          rig add 4.4.0
          Rscript -e "install.packages(c('arrow', 'connections', 'RSQLite', 'readxl', 'lubridate'))"

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          # Install Yarn
          npm install -g yarn

          # Install node-gyp; this is required by some packages, and yarn
          # sometimes fails to automatically install it.
          yarn global add node-gyp

          # Perform the main yarn command; this installs all Node packages and
          # dependencies
          yarn --immutable --network-timeout 120000

      - name: Compile and Download
        run: yarn npm-run-all --max_old_space_size=4095 -lp compile "electron x64" playwright-install download-builtin-extensions

      - name: Compile Integration Tests
        run: yarn --cwd test/integration/browser compile

      - name: Compile Smoke Tests
        run: yarn --cwd test/smoke compile

      - name: Run Unit Tests (Electron)
        id: electron-unit-tests
        run: DISPLAY=:10 ./scripts/test.sh

      - name: Run Unit Tests (node.js)
        id: nodejs-unit-tests
        run: yarn test-node

      - name: Run Unit Tests (Browser, Chromium)
        id: browser-unit-tests
        run: DISPLAY=:10 yarn test-browser-no-install --browser chromium

      - name: Run Integration Tests (Electron)
        id: electron-integration-tests
        run: DISPLAY=:10 ./scripts/test-integration.sh

#      Remote integration tests currently disabled since licensing is required.
#      See https://github.com/posit-dev/positron/issues/3514 for details.
#
#      - name: Run Integration Tests (Remote)
#        id: electron-remote-integration-tests
#        timeout-minutes: 15
#        run: DISPLAY=:10 ./scripts/test-remote-integration.sh
#
#      - name: Run Integration Tests (Browser, Chromium)
#        id: browser-integration-tests
#        run: DISPLAY=:10 ./scripts/test-web-integration.sh --browser chromium

      - name: Check Python version
        run: |
          python --version
          which python
          python -m pip --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas matplotlib ipykernel pyarrow openpyxl trcli

      - name: Run Smoke Tests (Electron)
        env:
          POSITRON_PY_VER_SEL: Python 3.10.12
          POSITRON_R_VER_SEL: R 4.4.0
        id: electron-smoke-tests
        run: DISPLAY=:10 yarn smoketest-no-compile --tracing

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/.build/logs/smoke-tests-electron/test-results/*results.xml'

      - name: Set TestRail Run Title
        id: set-testrail-run-title
        run: echo "TESTRAIL_TITLE=$(date +'%Y-%m-%d') Smoke Tests" >> $GITHUB_ENV

      - name: Upload Test Results to TestRail
        id: testrail-upload
        if: always()
        run: trcli --host "https://posit.testrail.io/" --project Positron --username jon.vanausdeln@posit.co --key ${{ secrets.TESTRAIL_API_KEY}} parse_junit --file ".build/logs/smoke-tests-electron/test-results/results.xml" --case-matcher name --title "$TESTRAIL_TITLE" --close-run

      - name: Upload run artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: .build/logs/smoke-tests-electron/
