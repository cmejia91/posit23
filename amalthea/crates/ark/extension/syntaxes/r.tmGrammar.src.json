{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "comment": "https://macromates.com/manual/en/language_grammars",
    "name": "R",
    "scopeName": "source.r",
    "fileTypes": ["R", "r", "Rprofile"],
    "foldingStartMarker": "\\{\\s*(?:#|$)",
    "foldingStopMarker": "^\\s*\\}",
    "variables": {
        "bracket": "keyword.operator",
        "identifier": "constant.other",
        "latex": "keyword.other",
        "operator": "keyword.operator",
        "parameter": "entity.name.tag",
        "roxygen-tag": "keyword.other"
    },
    "patterns": [
        {
            "include": "#roxygen-example"
        },
        {
            "include": "#basic"
        }
    ],
    "repository": {
        "basic": {
            "patterns": [
                {
                    "include": "#section"
                },
                {
                    "include": "#roxygen"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#expression"
                }
            ]
        },
        "basic-roxygen-example": {
            "patterns": [
                {
                    "name": "comment.line",
                    "match": "^\\s*#+'"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#expression"
                }
            ]
        },
        "brackets": {
            "patterns": [
                {
                    "name": "{{ bracket }}",
                    "begin": "\\{",
                    "end": "\\}",
                    "patterns": [
                        {
                            "include": "#basic"
                        }
                    ]
                },
                {
                    "name": "{{ bracket }}",
                    "begin": "\\[",
                    "end": "\\]",
                    "patterns": [
                        {
                            "include": "#basic"
                        }
                    ]
                },
                {
                    "name": "{{ bracket }}",
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "match": "([\\w.]+)\\s*(?==)",
                            "captures": {
                                "1": { "name": "{{ parameter }}"}
                            }
                        },
                        {
                            "include": "#basic"
                        }
                    ]
                }
            ]
        },
        "comment": {
            "name": "comment.line",
            "match": "#.*"
        },
        "escapes": {
            "patterns": [
                {
                    "include": "#escape-unicode"
                },
                {
                    "include": "#escape-hex"
                },
                {
                    "include": "#escape-backslash"
                }
            ]
        },
        "escape-unicode": {
            "name": "constant.character.escape",
            "match": "\\\\[uU](?:[0-9a-fA-F]+|\\{[0-9a-fA-F]+\\})"
        },
        "escape-hex": {
            "name": "constant.numeric",
            "match": "\\\\x[0-9a-fA-F]+"
        },
        "escape-backslash": {
            "name": "constant.character.escape",
            "match": "\\\\."
        },
        "expression": {
            "patterns": [
                {
                    "include": "#brackets"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#function-definition"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#function-call"
                },
                {
                    "include": "#identifiers"
                },
                {
                    "include": "#numbers"
                },
                {
                    "include": "#operators"
                }
            ]
        },
        "function-call": {
            "name": "entity.name.function",
            "match": "([\\w.]+)(?=\\()"
        },
        "function-definition": {
            "name": "keyword",
            "begin": "(function)\\s*(\\()",
            "beginCaptures": {
                "1": { "name": "keyword" },
                "2": { "name": "{{ bracket }}" }
            },
            "end": "(\\))",
            "endCaptures": {
                "1": { "name": "{{ bracket }}" }
            },
            "patterns": [
                {
                    "begin": "([\\w.]+)",
                    "beginCaptures": {
                        "1": { "name": "{{ parameter }}" }
                    },
                    "end": "(?=[,)])",
                    "patterns": [
                        {
                            "include": "#basic"
                        }
                    ]
                },
                {
                    "include": "#basic"
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "include": "#identifier-syntactic"
                },
                {
                    "include": "#identifier-quoted"
                }
            ]
        },
        "identifier-syntactic": {
            "name": "{{ identifier }}",
            "match": "[\\p{L}\\p{Nl}.][\\p{L}\\p{Nl}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}.]*"
        },
        "identifier-quoted": {
            "name": "{{ identifier }}",
            "begin": "`",
            "end": "`",
            "patterns": [
                {
                    "match": "\\\\`"
                }
            ]
        },
        "latex": {
            "patterns": [
                {
                    "name": "comment.line",
                    "begin": "(\\\\\\w+)(\\{)",
                    "beginCaptures": {
                        "1": { "name": "keyword.other" },
                        "2": { "name": "keyword.operator" }
                    },
                    "end": "(\\})",
                    "endCaptures": {
                        "1": { "name": "{{ latex }}" }
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "include": "#keywords-control"
                },
                {
                    "include": "#keywords-builtin"
                },
                {
                    "include": "#keywords-constant"
                }
            ]
        },
        "keywords-control": {
            "name": "keyword",
            "match": "(?:\\\\|function|if|else|in|break|next|repeat|for|while)\\b"
        },
        "keywords-builtin": {
            "name": "keyword.other",
            "match": "(?:setGroupGeneric|setRefClass|setGeneric|NextMethod|setMethod|UseMethod|tryCatch|setClass|warning|require|library|R6Class|return|switch|attach|detach|source|stop|try)\\b"
        },
        "keywords-constant": {
            "name": "constant.language",
            "match": "(?:NA_character_|NA_integer_|NA_complex_|NA_real_|TRUE|FALSE|NULL|Inf|NaN|NA|T|F)\\b"
        },
        "numbers": {
            "name": "constant.numeric",
            "match": "(?:(?:\\d+(?:\\.\\d*)?)|(?:\\.\\d+))(?:[eE][+-]?\\d*)?[iL]?"
        },
        "operators": {
            "name": "{{ operator }}",
            "match": "%.*%|:::|::|:=|\\|>|=>|%%|>=|<=|==|!=|<<-|->>|->|<-|\\|\\||&&|=|\\+|-|\\*\\*?|/|\\^|>|<|!|&|\\||~|\\$|:|@|\\?|,"
        },
        "strings": {
            "patterns": [
                {
                    "include": "#qstring"
                },
                {
                    "include": "#qqstring"
                }
            ]
        },
        "qstring": {
            "name": "string.quoted.single",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "include": "#escapes"
                }
            ]
        },
        "qqstring": {
            "name": "string.quoted.double",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "include": "#escapes"
                }
            ]
        },
        "roxygen": {
            "name": "comment.line.roxygen",
            "begin": "^\\s*#+'",
            "end": "$",
            "patterns": [
                {
                    "include": "#roxygen-tokens"
                },
                {
                    "include": "#latex"
                },
                {
                    "name": "comment.line",
                    "match": "[^@\\\\]*"
                }
            ]
        },
        "roxygen-example": {
            "name": "markup.heading",
            "begin": "(^\\s*#+')\\s*(@examples)\\s*$",
            "beginCaptures": {
                "1": { "name": "comment.line" },
                "2": { "name": "{{ roxygen-tag }}" }
            },
            "end": "(^\\s*#+')\\s*(@\\w*)",
            "endCaptures": {
                "1": { "name": "comment.line" },
                "2": { "name": "{{ roxygen-tag }}" }
            },
            "patterns": [
                {
                    "name": "comment.line",
                    "match": "^\\s*#+'"
                },
                {
                    "name": "{{ bracket }}",
                    "match": "[\\[\\(\\{\\}\\)\\]]"
                },
                {
                    "include": "#latex"
                },
                {
                    "include": "#roxygen-tokens"
                },
                {
                    "include": "#basic-roxygen-example"
                }
            ]
        },
        "roxygen-tokens": {
            "patterns": [
                {
                    "name": "constant.character.escape",
                    "match": "@@"
                },
                {
                    "begin": "(@(?:param|field|slot))\\s*",
                    "beginCaptures": {
                        "1": { "name": "{{ roxygen-tag }}" }
                    },
                    "end": "(?:\\s|$)",
                    "patterns": [
                        {
                            "name": "{{ parameter }}",
                            "match": "([\\w.]+)"
                        },
                        {
                            "name": "keyword.operator",
                            "match": ","
                        }
                    ]
                },
                {
                    "name": "{{ roxygen-tag }}",
                    "match": "@(?!@)\\w*"
                }
            ]
        },
        "section": {
            "match": "^\\s*(#+)\\s*(.*?)(={4,}|-{4,}|#{4,})\\s*$",
            "captures": {
                "1": { "name": "comment.line" },
                "2": { "name": "entity.name.section" },
                "3": { "name": "comment.line" }
            }
        }
    }
}
