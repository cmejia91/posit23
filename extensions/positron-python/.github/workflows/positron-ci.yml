name: "Positron Python CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '18.17.1'
  PYTHON_VERSION: '3.10'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Node dependencies
        run: yarn install --immutable --network-timeout 120000 --prefer-offline

      - name: Run `gulp prePublishNonBundle`
        run: yarn prePublish

      - name: Check dependencies
        run: yarn checkDependencies

      - name: Lint TypeScript code
        run: yarn lint

      - name: Install Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Check Python format
        run: |
          python -m pip install -U black
          python -m black . --check --include "positron\/.*.py$|positron_language_server.py$|tests\/test_positron_.*.py$"
        working-directory: pythonFiles

  python-tests:
    name: Test Python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: 'ubuntu-latest'
            python-version: '3.8'
          - os: 'macos-latest'
            python-version: '3.9'
          - os: 'windows-latest'
            python-version: '3.10'
          - os: 'ubuntu-latest'
            python-version: '3.11'
          - os: 'ubuntu-latest'
            python-version: '3.12'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Python requirements
        uses: brettcannon/pip-secure-install@v1
        with:
          options: '-t ./pythonFiles/lib/python --no-cache-dir --implementation py'

      - name: Install Jedi requirements
        run: python scripts/vendor.py

      - name: Install test requirements
        run: |
          python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade --pre debugpy
          python -m pip install --prefer-binary --upgrade -r build/pinned-test-requirements.txt

      - name: Run Pyright
        uses: jakebailey/pyright-action@v1
        with:
          working-directory: 'pythonFiles'

      - name: Run Python unit tests
        run: python pythonFiles/tests/run_all.py
